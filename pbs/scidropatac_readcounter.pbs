#!/bin/bash

### set the job name
#PBS -N scidrop
#PBS -l select=1:ncpus=7:mem=42gb:pcmem=6gb
#PBS -l place=pack:shared
#PBS -l pvmem=168gb

# Maximum CPU and clock time per job
#PBS -l cput=80:00:0

### Wall time is the total length of realtime that a script will be on the cluster before being stoped
#PBS -l walltime=10:00:0

# Submit an array of jobs to run the script multiple times
###PBS -J 1-100

# Which queue should we use?
# The queue determines how quickly nodes a aquired to run a job
# High and standard priority use group time
# Windfall uses no time, but is the lowest priority for getting nodes
###PBS -q oc_high_pri
#PBS -q oc_standard
###PBS -q oc_windfall


# Ensure your time gets charged to the group
#PBS -W group_list=cusanovichlab
# Pass your environment variables to the pbs job
#PBS -V
# Join standard out and standard error messages
#PBS -j oe

### run your excutable program with begin and end date and time output
date
module load R/3.6.1

#############################
##EDIT THESE AS NEEDED:
#############################
OUTDIR=OUTDIR
base=base
hs_peaks=hs_peaks
mm_peaks=mm_peaks
index_table=index_table
#############################
mkdir $OUTDIR/bams
mkdir $OUTDIR/reports
mkdir $OUTDIR/reports/indices_table

date
# generate reads count report, if not install pysam, use "conda config --add channels defaults"; "conda config --add channels conda-forge"; "conda config --add channels bioconda"; "conda install pysam"
# pysam requires "libffi.so.6" so add this line to .bashrc file: export LD_LIBRARY_PATH="/home/u23/haozhang1/miniconda2/envs/atac/lib"
echo 'generating readcounts report...'
python /home/u23/haozhang1/sciatac_pipeline/src/barnyard/readcounter.py $OUTDIR/bams/${base}.q10.sort.dedup.bam \
$OUTDIR/reports/indices_table/${index_table} \
$hs_peaks \
$mm_peaks \
$OUTDIR/reports/${base}.readcounts.report.txt

# call cell plots using R, need to install mclust
echo 'calling cells...'
Rscript /home/u23/haozhang1/scatac/preprocess/sc_atac_twospecies_cellcall_plots.R $OUTDIR/reports/${base}.readcounts 1000

echo 'plotting dedupreport...'
Rscript /home/u23/haozhang1/scatac/analysis/sc_atac_dupreport_plotter.R \
$OUTDIR/reports/${base}.deduplicate_counter_results.txt \
$OUTDIR/reports/${base}.readcounts.readdepth.cells.indextable.txt

echo 'done'
date
