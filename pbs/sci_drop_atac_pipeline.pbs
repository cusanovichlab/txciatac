#!/bin/bash

### set the job name
#PBS -N sci-drop-atac-100k
#PBS -l select=1:ncpus=21:mem=126gb:pcmem=6gb
#PBS -l place=pack:shared
#PBS -l pvmem=168gb

# Maximum CPU and clock time per job
#PBS -l cput=50:00:0

### Wall time is the total length of realtime that a script will be on the cluster before being stoped
#PBS -l walltime=10:00:0

# Submit an array of jobs to run the script multiple times
###PBS -J 1-100

# Which queue should we use?
# The queue determines how quickly nodes required to run a job
# High and standard priority use group time
# Windfall uses no time, but is the lowest priority for getting nodes
###PBS -q oc_high_pri
#PBS -q oc_standard
###PBS -q oc_windfall


# Ensure your time gets charged to the group
#PBS -W group_list=cusanovichlab
# Pass your environment variables to the pbs job
#PBS -V
# Join standard out and standard error messages
#PBS -j oe

module load fastqc

OUTDIR=/xdisk/darrenc/mig2020/rsgrps/cusanovichlab/projects/sciATAC_projects/20200716_sci_drop_atac_100k
bcl_dir=/xdisk/darrenc/mig2020/rsgrps/cusanovichlab/projects/sciPLEX_projects/200715_firstsciplex/200715_NB501893_0155_AHCLL5AFX2
gm_peaks=/xdisk/darrenc/mig2020/rsgrps/cusanovichlab/references/annotations/wgEncodeUwDnaseGm12878Hotspots.intersected.singlecell.whitelist.bed
ch12_peaks=/xdisk/darrenc/mig2020/rsgrps/cusanovichlab/projects/sciATAC_projects/20191204_sci_atac_drop_10k/hao.out/macs/cellline_premix_mm.nodups.narrowPeak_merged.bed

hs_lung_peaks=/xdisk/darrenc/mig2020/rsgrps/cusanovichlab/references/annotations/barnyard.hg19.lung.atac_peaks.bed
mm_lung_peaks=/xdisk/darrenc/mig2020/rsgrps/cusanovichlab/references/annotations/barnyard.mm9.lung.atac_peaks.bed

mm_lung_atlas=/xdisk/darrenc/mig2020/rsgrps/cusanovichlab/references/annotations/mouse.lung.atlas.peaks.bed

module load samtools/1.4
module load R/3.6.1

mkdir $OUTDIR/fastqs
mkdir $OUTDIR/fastqc

echo 'running'

### run your excutable program with begin and end date and time output
date
# use unsplitting line flag next time
# If the library was mixed with other libraries, use the use-bases-mask to extract the cycles for sci-drop-atac
# refer https://www.biostars.org/p/344768/
bcl2fastq --runfolder-dir $bcl_dir \
               -o $OUTDIR/fastqs \
               --sample-sheet $OUTDIR/SampleSheet.csv \
               --ignore-missing-bcls \
			   --no-lane-splitting \
			   --use-bases-mask Y*,I8N*,I*,Y77N*

# deconvolute fastq files using P7 sample index
# the python script is python 3, have not figure out how to switch to python 3 on cluster
# so need to run following script using interactive node and use conda activate py3

mkdir $OUTDIR/fastqs/temp

index=$OUTDIR/index/p7_sample_index_table.txt
fastq1=$OUTDIR/fastqs/Undetermined_S0_R1_001.fastq.gz
fastq2=$OUTDIR/fastqs/Undetermined_S0_R2_001.fastq.gz
output_prefix=$OUTDIR/fastqs/temp/scidrop

# conda activate py3

echo 'demultiplexing fastq'

/home/u23/haozhang1/miniconda2/envs/py3/bin/python3.6 /xdisk/darrenc/mig2020/rsgrps/cusanovichlab/sbin/scidropatac/scidropatac_fastq_deconvoluter_by_sample_idx.py <(zcat $fastq1) <(zcat $fastq2) $index $output_prefix

# fastqc
echo 'running fastqc'

fastqc $OUTDIR/fastqs/temp/*.fastq -o $OUTDIR/fastqc

# append tn5 barcode to index and remove the first 27 bases which are ME (19bp) and tn5 bc (8bo) from reads 2
echo 'adding tn5 bc to index'

# mv Unknown fastqs
mkdir $OUTDIR/fastqs/temp/unknown
for file in $OUTDIR/fastqs/temp/*.Unknown.*.fastq
do
mv ${file} $OUTDIR/fastqs/temp/unknown
done

# append tn5 barcode
for file in $OUTDIR/fastqs/temp/*.R1.fastq
do
base=$(basename ${file} .R1.fastq)
fastq1=${base}.R1.fastq
fastq2=${base}.R2.fastq
outprefix=$OUTDIR/fastqs/temp/${base}_tn5.bc
/home/u23/haozhang1/miniconda2/envs/py3/bin/python3.6 /xdisk/darrenc/mig2020/rsgrps/cusanovichlab/sbin/scidropatac/scidropatac_add_tn5.bc.py $OUTDIR/fastqs/temp/$fastq1 $OUTDIR/fastqs/temp/$fastq2 $outprefix
done

# correct barcodes
# python script written using pyhton 2, so run with qsub
# save samplesheet in $OUTDIR/samplesheet
#############################
# important!!!
# check samplesheet before run the command, if there is quotation mark in the samplesheet, you need remove it
#############################

# samplesheet only need beads barcode and tn5 barcode, eg.
# input all tn5 barcodes used in the experiment setting, do not demultiplex in this step
# sample_id	ranges
# bcfixed	1-737280:1-8,13-20,25-32,37-44,49-56,61-68,73-80,85-92

mkdir $OUTDIR/scripts

for file in $OUTDIR/fastqs/temp/*_tn5.bc.R1.fastq
do
base=$(basename ${file} _tn5.bc.R1.fastq)
fastq1=${base}_tn5.bc.R1.fastq
fastq2=${base}_tn5.bc.R2.fastq
samplesheet=${base}_samplesheet.txt
output=${base}
stats=${base}_bc.fixed.stats
sed "4 s/scidrop/${base}_fixbc/" /xdisk/darrenc/mig2020/rsgrps/cusanovichlab/sbin/scidropatac/scidropatac_barcode_correct.pbs > $OUTDIR/scripts/${base}_bc_correct.sh
sed -i "44 s~OUTDIR~$OUTDIR~2" $OUTDIR/scripts/${base}_bc_correct.sh
sed -i "45 s/samplesheet/$samplesheet/2" $OUTDIR/scripts/${base}_bc_correct.sh
sed -i "46 s/fastq1/$fastq1/2" $OUTDIR/scripts/${base}_bc_correct.sh
sed -i "47 s/fastq2/$fastq2/2" $OUTDIR/scripts/${base}_bc_correct.sh
sed -i "48 s/output/$output/2" $OUTDIR/scripts/${base}_bc_correct.sh
sed -i "50 s/stats/$stats/2" $OUTDIR/scripts/${base}_bc_correct.sh
# qsub $OUTDIR/scripts/bc_correct_${base}.sh
done

# mv unknown fastq to unknown
mv $OUTDIR/fastqs/*.Unknown_R*.fastq $OUTDIR/fastqs/unknown/

# deduplicate
###################
# pysam only can be loaded by Python 2.7.16 :: Anaconda
# not use module load python/2.7/2.7.14
###########################
for file in $OUTDIR/fastqs/*.bcfixed_R1.fastq
do
base=$(basename ${file} .bcfixed_R1.fastq)
fastq1=${base}.bcfixed_R1.fastq
fastq2=${base}.bcfixed_R2.fastq
sed "4 s/scidrop/${base}_duplicate/" /xdisk/darrenc/mig2020/rsgrps/cusanovichlab/sbin/scidropatac/scidropatac_deduplicate.pbs > $OUTDIR/scripts/${base}_deduplicate.sh
sed -i "42 s~OUTDIR~$OUTDIR~2" $OUTDIR/scripts/${base}_deduplicate.sh
sed -i "43 s/base/$base/2" $OUTDIR/scripts/${base}_deduplicate.sh
sed -i "44 s/fastq1/$fastq1/2" $OUTDIR/scripts/${base}_deduplicate.sh
sed -i "45 s/fastq2/$fastq2/2" $OUTDIR/scripts/${base}_deduplicate.sh
# qsub $OUTDIR/scripts/${base}_deduplicate.sh
done

##########################
#
# make index table samplesheet
# base name $'\t' sample name $'\t' index (p7:1-737280:tn5)
# e.g. P7_1	celline_postmix	1:1-737280:1-2,13-14,25-26,37-38,49-50,61-62,73-74,85
#
#####################################
#####################################
#
# Important!!!
# check well id for each sample using check_sample_well_id.R 
# run this script using R studio to make sure well id match to sample layout on 96 well plate
#
#######################################
#######################################
#
# run scidropatac_make_index.table.pbs
# change the number of jobs in line 13
# #PBS -J 1-N to make it equal to the number of samples
# change output dir in line 26
qsub $OUTDIR/scripts/scidropatac_make_index.tables.pbs

# cat indices table
for file in $OUTDIR/fastqs/*.bcfixed_R1.fastq.gz
do
base=$(basename ${file} .bcfixed_R1.fastq.gz)
cat $OUTDIR/reports/indices_table/${base}*indices_table.txt >$OUTDIR/reports/indices_table/${base}_allsample.indextable.txt
done

############################
# generate barnyard plot
# use scidropatac_plots.pbs
hs_peaks=$gm_peaks
mm_peaks=$ch12_peaks

for file in $OUTDIR/reports/indices_table/*_allsample.indextable.txt
do
base=$(basename ${file} _allsample.indextable.txt)
sed "4 s/scidrop/${base}_readscount/" /xdisk/darrenc/mig2020/rsgrps/cusanovichlab/sbin/scidropatac/scidropatac_readcounter.pbs > $OUTDIR/scripts/${base}_readcounter.sh
sed -i "41 s~OUTDIR~$OUTDIR~2" $OUTDIR/scripts/${base}_readcounter.sh
sed -i "42 s/base/$base/2" $OUTDIR/scripts/${base}_readcounter.sh
sed -i "43 s~hs_peaks~$hs_peaks~2" $OUTDIR/scripts/${base}_readcounter.sh
sed -i "44 s~mm_peaks~$mm_peaks~2" $OUTDIR/scripts/${base}_readcounter.sh
sed -i "45 s/index_table/${base}_allsample.indextable.txt/2" $OUTDIR/scripts/${base}_readcounter.sh
# qsub $OUTDIR/scripts/${base}_readcounter.sh
done

##########################################################
##########################################################
#
# make barnyard plot for lung samples
#
##########################################################
##########################################################
#
qsub $OUTDIR/scripts/scidropatac_make_lung_index.tables.pbs

# cat indices table
cat P7_linear_lung_mix_indices_table.txt P7_linear_mm_lung_indices_table.txt >P7_linear_lung_indices_table.txt
cat P7_expo_lung_mix_indices_table.txt P7_expo_mm_lung_ndices_table.txt >P7_expo_lung_indices_table.txt
cat DecoyDNA_lung_mix_indices_table.txt DecoyDNA_mm_lung_indices_table.txt >DecoyDNA_lung_indices_table.txt
cat Blocking_oligo_lung_mix_indices_table.txt Blocking_oligo_lung_indices_table.txt >Blocking_oligo_lung_indices_table.txt

############################
# generate barnyard plot
# use scidropatac_plots.pbs
hs_peaks=$hs_lung_peaks
mm_peaks=$mm_lung_peaks

# need to rename the output files 
# line 59 to $OUTDIR/reports/${base}_lung.readcounts.report.txt
# line 63 to $OUTDIR/reports/${base}_lung.readcounts 1000
# comment out from line 65 to line 68 (no need run deduplicate counter)

for file in $OUTDIR/reports/indices_table/*_lung_indices_table.txt
do
base=$(basename ${file} _lung_indices_table.txt)
sed "4 s/scidrop/${base}_readscount/" /xdisk/darrenc/mig2020/rsgrps/cusanovichlab/sbin/scidropatac/scidropatac_readcounter.pbs > $OUTDIR/scripts/${base}_lung_readcounter.sh
sed -i "41 s~OUTDIR~$OUTDIR~2" $OUTDIR/scripts/${base}_lung_readcounter.sh
sed -i "42 s/base/$base/2" $OUTDIR/scripts/${base}_lung_readcounter.sh
sed -i "43 s~hs_peaks~$hs_peaks~2" $OUTDIR/scripts/${base}_lung_readcounter.sh
sed -i "44 s~mm_peaks~$mm_peaks~2" $OUTDIR/scripts/${base}_lung_readcounter.sh
sed -i "45 s/index_table/${base}_lung_indices_table.txt/2" $OUTDIR/scripts/${base}_lung_readcounter.sh
# qsub $OUTDIR/scripts/${base}_readcounter.sh
done

#######################################################################
#######################################################################
#
# isolate mouse lung cell by combine all mouse lung from all conditions
# still working on this
#
#######################################################################
#######################################################################
# deconvolute mm lung cells
# merge P7 linear and expo dedup bam

samtools merge $OUTDIR/bams/P7.q10.sort.dedup.bam $OUTDIR/bams/P7_linear.q10.sort.dedup.bam $OUTDIR/bams/P7_expo.q10.sort.dedup.bam
samtools index $OUTDIR/bams/P7.q10.sort.dedup.bam

# use isolate_lung_barcodes.R to isolate mouse lung barcodes
# sample name needs to be consistent with the the sample name (column 2) shown in ${base}_mm_lung.indextable.txt
# after deconvolution, need to grep mm9 reads from bam file
# samtools view -h $OUTDIR/bams/${base}.${sample}.bam | grep hg19 | samtools view -Su - | samtools sort -@ 8 - -o $OUTDIR/bams/${base}.${sample}_pure.bam

sample=Mouse

for file in $OUTDIR/reports/indices_table/*_mm_lung.indextable.txt
do
base=$(basename ${file} _mm_lung.indextable.txt)
python /home/u23/haozhang1/scatac/process/sc_atac_library_deconvoluter.py $OUTDIR/bams/${base}.q10.sort.dedup.bam $OUTDIR/reports/indices_table/${base}_mm_lung.indextable.txt $OUTDIR/bams/${base} .bam
samtools index $OUTDIR/bams/${base}.${sample}.bam
samtools view -h $OUTDIR/bams/${base}.${sample}.bam | grep mm9 | samtools view -Su - | samtools sort -@ 8 - -o $OUTDIR/bams/${base}.${sample}_pure.bam
samtools index $OUTDIR/bams/${base}.${sample}_pure.bam
done

# insert distribution
mkdir $OUTDIR/reports
# java -Xmx1G -jar /home/u23/haozhang1/bin/picard.jar CollectInsertSizeMetrics INPUT=$OUTDIR/bams/unique_tn5.lung_mix_Human.bam OUTPUT=$OUTDIR/reports/unique_tn5.lung_mix_Human.insertsizes.txt H=$OUTDIR/reports/unique_tn5.lung_mix_Human.insertsizes.pdf

for file in $OUTDIR/reports/indices_table/*_mm_lung.indextable.txt
do
base=$(basename ${file} _mm_lung.indextable.txt)
java -Xmx1G -jar /home/u23/haozhang1/bin/picard.jar CollectInsertSizeMetrics \
INPUT=$OUTDIR/bams/${base}.${sample}_pure.bam \
OUTPUT=$OUTDIR/reports/${base}.${sample}_pure.insertsizes.txt \
H=$OUTDIR/reports/${base}.${sample}_pure.insertsizes.pdf;
done

# making mouse dhs count matrix...
# check pure bam file to see if it was indexed

# matrix for all mouse cells using mouse atlas genome window
for file in $OUTDIR/reports/indices_table/*_mm_lung.indextable.txt
do
base=$(basename ${file} _mm_lung.indextable.txt)
python /home/u23/haozhang1/scatac/preprocess/sc_atac_individual_dhs_readcounter.py \
$OUTDIR/bams/${base}.${sample}_pure.bam \
$OUTDIR/reports/indices_table/${base}_mm_lung.indextable.txt \
$mm_lung_atlas \
$OUTDIR/reports/${base}.${sample}_atlas.peaks_readcounter.matrix.txt \
True
done

####################################################################################
####################################################################################
#
# remove large droplet
# use R to remove large droplet that more than 3 tn5 barcodes
# run remove_large_droplet.R script in Rstudio
# redo barnyard plot with triplet index table
#
####################################################################################
####################################################################################
# 

base=DecoyDNA

echo 'generating readcounts report...'
python /home/u23/haozhang1/sciatac_pipeline/src/barnyard/readcounter.py $OUTDIR/bams/${base}.q10.sort.dedup.bam \
$OUTDIR/reports/indices_table/${base}_triplet.indextable.txt \
$gm_peaks \
$ch12_peaks \
$OUTDIR/reports/${base}_triplet.readcounts.report.txt

# call cell plots using R, need to install mclust
echo 'calling cells...'
Rscript /home/u23/haozhang1/scatac/preprocess/sc_atac_twospecies_cellcall_plots.R $OUTDIR/reports/${base}_triplet.readcounts 1000

# deduplicate droplets contains no more than 3 cells
echo 'plotting dedupreport...'
# dedup plotter use argument 1 as output file name
# so change the deduplicate_counter_results.txt to another name before run plotter

cp $OUTDIR/reports/${base}.deduplicate_counter_results.txt $OUTDIR/reports/${base}_triplet.deduplicate_counter_results.txt
Rscript /home/u23/haozhang1/scatac/analysis/sc_atac_dupreport_plotter.R $OUTDIR/reports/${base}_triplet.deduplicate_counter_results.txt $OUTDIR/reports/${base}_triplet.readcounts.readdepth.cells.indextable.txt
rm $OUTDIR/reports/${base}_triplet.deduplicate_counter_results.txt
date

##########################
##########################
# optional
# if bam files are splitted, combine them before generate readcounts
module load samtools/1.4
module load R/3.6.1

base=scidrop.Blocking_oligo

samtools merge $OUTDIR/bams/${base}.q10.sort.dedup.bam $OUTDIR/bams/*.q10.sort.dedup.bam
samtools index $OUTDIR/bams/${base}.q10.sort.dedup.bam

samtools merge $OUTDIR/bams/${base}.q10.sort.bam $OUTDIR/bams/*.q10.sort.bam
samtools index $OUTDIR/bams/${base}.q10.sort.bam

#####################
echo 'done'
date
